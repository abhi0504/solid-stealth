import { useState, useEffect } from 'react'
// import {fetchCurrItems} from './pageData'
import Rows from './Rows';
import usePagination from '@mui/material/usePagination';
import Pagination from '@mui/material/Pagination';

import ReactPaginate from 'react-paginate';



const SecondPage = () => {

    const [error, setError] = useState(null);
    let data = []
    const [isLoaded, setIsLoaded] = useState(false);
    // const [items, setItems] = useState([]);
    let items = [34408123, 34408680, 34407924, 34394594, 34406127, 34397715, 34388533, 34406340, 34380373, 34386452, 34407106, 34384016, 34388429, 34378838, 34406610, 34392590, 34398396, 34403742, 34402887, 34399970, 34408985, 34405962, 34387062, 34388038, 34400143, 34403464, 34404535, 34393903, 34404923, 34386066, 34401530, 34406760, 34402666, 34399142, 34408197, 34393794, 34407338, 34405210, 34403360, 34403383, 34405432, 34408822, 34404702, 34400443, 34402481, 34386645, 34409339, 34406325, 34404448, 34405846, 34401710, 34399125, 34395153, 34402752, 34408157, 34408192, 34407776, 34396026, 34378985, 34388463, 34398491, 34404396, 34407821, 34387982, 34391963, 34398886, 34407283, 34393943, 34391619, 34397514, 34408399, 34396605, 34404064, 34403090, 34403852, 34405397, 34405718, 34407013, 34400024, 34399811, 34389476, 34404894, 34396546, 34390794, 34405187, 34398791, 34394414, 34393791, 34393223, 34403684, 34390655, 34406619, 34404688, 34396619, 34408077, 34392832, 34406773, 34403539, 34390585, 34390725, 34389023, 34405192, 34399598, 34405551, 34378013, 34393085, 34408912, 34407043, 34396961, 34405988, 34403795, 34389145, 34396925, 34406720, 34393078, 34404185, 34393320, 34408391, 34391632, 34383558, 34383529, 34406073, 34400435, 34389041, 34398940, 34396303, 34405086, 34394350, 34405236, 34397092, 34387409, 34394738, 34404672, 34402648, 34404994, 34394351, 34401214, 34404851, 34404786, 34395115, 34391559, 34405792, 34408052, 34388245, 34378460, 34406505, 34378557, 34387134, 34408694, 34396958, 34402359, 34404382, 34408465, 34391969, 34396934, 34395138, 34384825, 34406769, 34399686, 34404603, 34388866, 34401899, 34388100, 34366610, 34396443, 34407588, 34408289, 34403727, 34395814, 34388735, 34397421, 34403537, 34391332, 34391977, 34400214, 34395712, 34370440, 34392783, 34391742, 34408090, 34405766, 34403942, 34399947, 34395916, 34382655, 34401723, 34386876, 34388369, 34405583, 34360010, 34403573, 34395508, 34402200, 34407085, 34384941, 34389037, 34386309, 34380388, 34407815, 34404734, 34386570, 34397893, 34396344, 34374710, 34364807, 34391014, 34405286, 34374725, 34384719, 34390123, 34393493, 34384767, 34382744, 34387834, 34407597, 34354213, 34389421, 34376276, 34391045, 34388734, 34392885, 34392084, 34396664, 34406508, 34388985, 34407443, 34385766, 34405475, 34394210, 34378756, 34386052, 34389076, 34395782, 34390348, 34349484, 34407206, 34391142, 34393485, 34379109, 34365536, 34396394, 34407068, 34390720, 34382751, 34373279, 34361651, 34392425, 34405768, 34387081, 34402052, 34385223, 34400936, 34406846, 34391845, 34376781, 34409273, 34393273, 34389456, 34388962, 34396507, 34365515, 34401792, 34350260, 34391374, 34379787, 34367767, 34384681, 34403428, 34399923, 34393271, 34404417, 34376815, 34399468, 34379965, 34391938, 34390652, 34389562, 34371073, 34380359, 34389496, 34386449, 34388826, 34358795, 34401960, 34378673, 34407467, 34393083, 34381598, 34381121, 34389670, 34387407, 34368597, 34386443, 34388990, 34359656, 34406119, 34385951, 34382635, 34382908, 34388670, 34352979, 34379156, 34376885, 34386001, 34383183, 34347193, 34392193, 34405441, 34386929, 34402277, 34367812, 34390105, 34377461, 34401208, 34393662, 34352935, 34349278, 34400169, 34380914, 34402292, 34386017, 34369560, 34384730, 34396402, 34388095, 34373928, 34359504, 34405519, 34382106, 34404117, 34346727, 34395892, 34401418, 34391407, 34401432, 34376420, 34391809, 34376884, 34401350, 34390010, 34405385, 34352133, 34408341, 34386039, 34380470, 34363991, 34403489, 34357176, 34408288, 34380220, 34370740, 34350662, 34405110, 34376775, 34405096, 34398656, 34402429, 34349558, 34365110, 34386813, 34384656, 34359736, 34392551, 34381884, 34398617, 34405630, 34392428, 34374083, 34404867, 34374012, 34365609, 34397077, 34385043, 34404781, 34384979, 34379892, 34380594, 34364748, 34353907, 34389389, 34372765, 34365307, 34385985, 34393891, 34350877, 34365048, 34368601, 34396625, 34367390, 34363948, 34367780, 34398105, 34385212, 34355669, 34393972, 34350340, 34348388, 34350436, 34399167, 34396130, 34377910, 34362157, 34393069, 34381219, 34393556, 34395114, 34390205, 34379483, 34404179, 34388741, 34397436, 34367820, 34359853, 34397705, 34371285, 34363642, 34365033, 34392811, 34382212, 34392716, 34347232, 34364991, 34367747, 34347079, 34391996, 34366767, 34369074, 34336668, 34372587, 34363743, 34367035, 34366286, 34359211, 34385785, 34381895, 34381034, 34366657, 34371123, 34362042, 34403102, 34404692, 34399955, 34375551, 34390389, 34362210, 34354179, 34369562, 34399753, 34344514, 34356429, 34382901, 34350158, 34377510, 34389795, 34389779, 34359119, 34351887, 34351304, 34370192, 34404392, 34359383, 34391223, 34372140, 34395254, 34351258, 34386167, 34345952, 34392325, 34401865, 34372700, 34350446, 34363974, 34389030, 34389017, 34388996, 34391204, 34379727, 34375325, 34351665, 34377780, 34391697, 34392352, 34399786, 34405223, 34358828, 34350209, 34397499, 34358759, 34384694, 34353783, 34375921, 34368237, 34357895, 34381459, 34358190, 34374840, 34377619, 34396234, 34379984, 34375735]

    const [currItems, setCurrItems] = useState([]);
    const [currPage, setcurrPage] = useState(1);

    let totalPages = items.length / 10;
    let num = (currPage - 1) * 10

    function millisToMinutesAndSeconds(millis) {
        var minutes = Math.floor(millis / 60000);
        var seconds = ((millis % 60000) / 1000).toFixed(0);
        return minutes + ":" + (seconds < 10 ? '0' : '') + seconds;
    }



    const fetchCurrItems = async (currPage) => {
        console.log("Fetching curr items " + currPage);
        let start = (currPage - 1) * 10;
        let end = start + 9


        while (end >= start) {

            console.log(start);

            const res = await fetch(`https://hacker-news.firebaseio.com/v0/item/` + items[start] + `.json?print=pretty`)
            const json = await res.json()
            data.push(json)
            start++;
        }

        console.log("data here" + data.map((obj) => console.log(obj)));

        await setCurrItems(data)
        console.log(currItems);

        return data
    }


    const handler = (event, page) => {
        // setIsLoaded(false);
        console.log("page " + page);
        setcurrPage(page);
        console.log(currPage);
    }

    useEffect(() => {
        fetchCurrItems(currPage)
            // .then(res => res.json())
            .then(
                (res) => {
                    setIsLoaded(true);
                    setCurrItems(res);
                },
                (error) => {
                    setIsLoaded(true);
                    setError(error);
                }
            )
    }, [currPage])

    if (error) {
        return <div>Error: {error.message}</div>;
    } else if (!isLoaded) {
        return <div>Loading...</div>;
    } else {
        console.log("rerererere" + currItems);
        return (



            <div>
                {

                    !isLoaded ? <div>Loading...</div> :

                        currItems.map(item => {
                            num++;
                            return (
                                <div>
                                    <Rows
                                        sno={num}
                                        title={item.title}
                                        url={item.url}
                                        points={item.descendants}
                                        author={item.by}
                                        tags={item._tags}
                                        time={millisToMinutesAndSeconds(item.time)}
                                        page={"second"}
                                    />

                                </div>
                            )
                        })
                }

                <div style={{ marginTop: '20px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                    <Pagination count={50} onChange={handler} />
                </div>



            </div>




        );
    }

}

export default SecondPage;